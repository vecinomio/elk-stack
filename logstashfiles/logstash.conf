
input {
  file {
    path => ["/logs/sw.log"]
    start_position => "beginning"
  }
}

filter {
  grok {
    match => { "message" => "(?<logs_time>[\d\:]+)\s(?<type>[\w\-]+)\:\s(Performance\sPeriod\s%{NUMBER:perf_period:int}|Hosts:\sCached:%{NUMBER:hosts_cached:int}|resources: check_total_memory:\s%{NUMBER:total_mem_1:int}/%{NUMBER:total_mem_2:int}/%{NUMBER:total_mem_3:int})" }
  }

  date {
    match => ["logs_time", "HH:mm:ss", "ISO8601", "YYYY-MM-dd HH:mm:ss", "YYYY-MM-dd HH:mm:ss.ZZZ"]
    target => "logs_time"
  }
}


output {
  elasticsearch { hosts => ["elasticsearch:9200"]}
}


#### Hosts_Cached (?<logs_time>[\d\:]+)\s(?<type>[\w\-]+)\:\sHosts:\sCached:(?<hosts_cached>\d)
### check_total_memory (?<logs_time>[\d\:]+)\s(?<type>[\w\-]+)\:\sresources: check_total_memory:\s(?<total_mem_1>\d+)/(?<total_mem_2>\d+)/(?<total_mem_3>\d+)
### perfor_per (?<logs_time>[\d\:]+)\s(?<type>[\w\-]+)\:\sPerformance\sPeriod\s(?<perf_period>\d+)
### all (?<logs_time>[\d\:]+)\s(?<type>[\w\-]+)\:\s(Performance\sPeriod\s(?<perf_period>\d+)|Hosts:\sCached:(?<hosts_cached>\d)|resources: check_total_memory:\s(?<total_mem_1>\d+)/(?<total_mem_2>\d+)/(?<total_mem_3>\d+))
